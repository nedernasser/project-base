version: '3.7'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: project_base_app
    working_dir: /usr/src/app
    env_file:
      - .env.local
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3005:3000"
      - "9237:9229"
    volumes:
      - ./:/usr/src/app
    links:
      - "db:db"
    expose:
      - '9237'
  api-mock:
    build:
      context: .
      dockerfile: api-mocks/Dockerfile
    ports:
      - "3502:3001"
      - "3503:3002"
    volumes:
      - ./api-mocks/api-mock.json:/data:ro
    command: sh -c "mockoon-cli start -d data --all; sleep infinity"
  db:
    image: mysql:5.7.33
    container_name: project_base_app_db
    environment:
      MYSQL_DATABASE: 'project_base'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    command: --sql-mode="" --default-authentication-plugin=mysql_native_password
    ports:
      - '3309:3306'
    expose:
      - '3309'
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        interval: 10s
        timeout: 20s
        retries: 10
    command:
      - mysqld
      - --default_storage_engine=InnoDB
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: project_base_pma
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8084:80
  redis:
    image: redis:latest
    command: redis-server --requirepass password
    ports:
      - "6379:6379"
volumes:
  dbdata:
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.1.0/24
    name: project_base_test_network

